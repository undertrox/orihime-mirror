package jp.gr.java_conf.mt777.origami.orihime.undo_box;

import jp.gr.java_conf.mt777.origami.dougu.senbunsyuugou.*;
import jp.gr.java_conf.mt777.origami.dougu.orisensyuugou.*;
import jp.gr.java_conf.mt777.origami.dougu.camera.*;
import java.awt.*;

import  jp.gr.java_conf.mt777.kiroku.memo.*;

import  jp.gr.java_conf.mt777.zukei2d.ten.*;
import  jp.gr.java_conf.mt777.zukei2d.senbun.*;
import  jp.gr.java_conf.mt777.zukei2d.takakukei.*;
import  jp.gr.java_conf.mt777.zukei2d.oritacalc.*;
import  jp.gr.java_conf.mt777.zukei2d.oritaoekaki.*;

// -------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------
public class Undo_Box {
	int i_undo_suu=20;//最大何回前までundoできるかという数

	int i_kiroku_suu=-1;//何回前まで記録しているかという数。5回前まで記録しているならi_kiroku_suu=5でこれには最新の記録分のmemo[0]は含まない
	int i_kiroku_iti=0;//0なら、最新の記録位置、ｎならｎ前の記録位置

	Memo memo[] = new Memo[21];//一時記録用に使う。memo[0] は最新の記録、memo[1]は一つ前の記録。
  
        //int kousi_zahyou[] = new int[1024000];
        //double d_kousi_zahyou[] = new double[1024000];

	//---------------------------------
	public Undo_Box(  ){  //コンストラクタ
		for(int i=0;i<=i_undo_suu;i++){memo[i]  = new Memo();}
	}

	//---------------------------------
	public void reset(){

	}

//---------------------------------
	public void kiroku(Memo m0){
		for(int i=0;i<=i_kiroku_suu-i_kiroku_iti;i++){
			memo[i].set(memo[i+i_kiroku_iti]);
		}

		i_kiroku_suu=i_kiroku_suu-i_kiroku_iti;
		i_kiroku_iti=0;

		for(int i=i_undo_suu;i>=1;i--){
			memo[i].set(memo[i-1]);
		}
		memo[0].set(m0);

		i_kiroku_suu=i_kiroku_suu+1;if(i_kiroku_suu>i_undo_suu){i_kiroku_suu=i_undo_suu;}
	}

	//-----------------------------
//---------------------------------
	public void kiroku_old(Memo m0){
		//i_kiroku_iti
		for(int i=0;i<=i_kiroku_suu-i_kiroku_iti;i++){
			Memo ma = new Memo();
			ma.set(memo[i+i_kiroku_iti]);
			memo[i].set(ma);
			//	memo[i].set(memo[i+i_kiroku_iti]);
		}

		i_kiroku_suu=i_kiroku_suu-i_kiroku_iti;
		i_kiroku_iti=0;

		for(int i=10;i<=1;i=i-1){
			Memo ma = new Memo();
			//Memo mb = new Memo();

			ma.set(memo[i-1]);
			memo[i].set(ma);

			//memo[i].set(memo[i-1])	;
		}

		memo[10].set(memo[9]);
		memo[9].set(memo[8]);
		memo[8].set(memo[7]);
		memo[7].set(memo[6]);
		memo[6].set(memo[5]);
		memo[5].set(memo[4]);
		memo[4].set(memo[3]);
		memo[3].set(memo[2]);
		memo[2].set(memo[1]);
		memo[1].set(memo[0]);
		memo[0].set(m0);

		i_kiroku_suu=i_kiroku_suu+1;if(i_kiroku_suu>10){i_kiroku_suu=10;}

		//System.out.println("i_kiroku_suu="+i_kiroku_suu);
		//System.out.println("i_kiroku_iti="+i_kiroku_iti);
		//for(int i=0;i<=10;i++){	System.out.println("memo"+i+":"+memo[i].getGyousuu());}
	}

	//-----------------------------
	public Memo undo(){ 
		i_kiroku_iti=i_kiroku_iti+1;
		if(i_kiroku_iti>i_kiroku_suu){i_kiroku_iti=i_kiroku_suu;}		
		return memo[i_kiroku_iti]; 
	}

	//-----------------------------
	public Memo redo(){
		i_kiroku_iti=i_kiroku_iti-1;
		if(i_kiroku_iti<0){i_kiroku_iti=0;}

		return memo[i_kiroku_iti]; 
	}
    
	//-----------------------------
	//public void setMemo(Memo m0){ 
	//	m1.set(m0); 
	//	System.out.println("Undo_Box　　m1　"+m1.getGyousuu());
	//}
	//-----------------------------
	//public Memo getMemo(){ 
	//	return m1; 
	//}
	//--------------------------------------------
	//public void test1(){//デバック等のテスト用
	//	System.out.println("Undo_Box");
	//}
	//--------------------------------------------
}